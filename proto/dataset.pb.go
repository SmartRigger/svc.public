//
// Copyright (C) HereweTech, Inc - All Rights Reserved
// Unauthorized copying of this file, via any medium is strictly prohibited
// Proprietary and confidential

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/dataset.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppendMeasureReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Detail        string                 `protobuf:"bytes,127,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendMeasureReq) Reset() {
	*x = AppendMeasureReq{}
	mi := &file_proto_dataset_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendMeasureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMeasureReq) ProtoMessage() {}

func (x *AppendMeasureReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dataset_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMeasureReq.ProtoReflect.Descriptor instead.
func (*AppendMeasureReq) Descriptor() ([]byte, []int) {
	return file_proto_dataset_proto_rawDescGZIP(), []int{0}
}

func (x *AppendMeasureReq) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AppendMeasureReq) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AppendMeasureReq) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type AppendMeasureResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendMeasureResp) Reset() {
	*x = AppendMeasureResp{}
	mi := &file_proto_dataset_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendMeasureResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMeasureResp) ProtoMessage() {}

func (x *AppendMeasureResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dataset_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMeasureResp.ProtoReflect.Descriptor instead.
func (*AppendMeasureResp) Descriptor() ([]byte, []int) {
	return file_proto_dataset_proto_rawDescGZIP(), []int{1}
}

func (x *AppendMeasureResp) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_proto_dataset_proto protoreflect.FileDescriptor

var file_proto_dataset_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x76, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x22, 0x5d,
	0x0a, 0x10, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x7f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2b, 0x0a,
	0x11, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x51, 0x0a, 0x07, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0f, 0x5a,
	0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_dataset_proto_rawDescOnce sync.Once
	file_proto_dataset_proto_rawDescData []byte
)

func file_proto_dataset_proto_rawDescGZIP() []byte {
	file_proto_dataset_proto_rawDescOnce.Do(func() {
		file_proto_dataset_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_dataset_proto_rawDesc), len(file_proto_dataset_proto_rawDesc)))
	})
	return file_proto_dataset_proto_rawDescData
}

var file_proto_dataset_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_dataset_proto_goTypes = []any{
	(*AppendMeasureReq)(nil),  // 0: svc.api.AppendMeasureReq
	(*AppendMeasureResp)(nil), // 1: svc.api.AppendMeasureResp
}
var file_proto_dataset_proto_depIdxs = []int32{
	0, // 0: svc.api.Dataset.AppendMeasure:input_type -> svc.api.AppendMeasureReq
	1, // 1: svc.api.Dataset.AppendMeasure:output_type -> svc.api.AppendMeasureResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_dataset_proto_init() }
func file_proto_dataset_proto_init() {
	if File_proto_dataset_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_dataset_proto_rawDesc), len(file_proto_dataset_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dataset_proto_goTypes,
		DependencyIndexes: file_proto_dataset_proto_depIdxs,
		MessageInfos:      file_proto_dataset_proto_msgTypes,
	}.Build()
	File_proto_dataset_proto = out.File
	file_proto_dataset_proto_goTypes = nil
	file_proto_dataset_proto_depIdxs = nil
}
